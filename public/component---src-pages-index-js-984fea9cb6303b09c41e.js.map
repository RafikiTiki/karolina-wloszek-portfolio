{"version":3,"sources":["webpack:///./src/components/IntroLetter.js","webpack:///./src/components/IntroWord.js","webpack:///./src/components/IntroText.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["IntroLetter","props","_this","_Component","call","this","setHoverClass","hoverClass","ListeningStateChangedEvent","state","render","_this2","char","react_default","a","createElement","className","onMouseOver","onMouseLeave","Component","IntroWord","_ref","word","style","display","split","map","letter","letterIndex","IntroLetter_IntroLetter","index","IntroText","children","wordIndex","react","key","IndexPage","location","layout","fontColor","pathname","seo","title","keywords","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","Consumer","staticQueryData","query","func","Header","id","color","gatsby_link_default","to","Layout","renderFooter","gatsby_browser_entry_StaticQuery","Fragment","components_header","_2994927498","node","bool"],"mappings":"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","file":"component---src-pages-index-js-984fea9cb6303b09c41e.js","sourcesContent":["import React, {useState, Component} from 'react'\n\n// export default function IntroLetter({char}) {\n//   const [ hoverClass, setHoverClass ] = useState('single-letter')\n\n//   if (char === ' ') {\n//     return <span> </span>\n//   } else {\n//     return (\n//       <span\n//         className={hoverClass}\n//         onMouseOver={() => setHoverClass('single-letter hovered')}\n//         onMouseLeave={() => setHoverClass('single-letter unhovered')}\n//       >\n//         { char }\n//       </span>\n//     )\n//   }\n// }\n\nexport default class IntroLetter extends Component() {\n  constructor(props) {\n    super(props);\n    this.state = {hoverClass: 'single-letter'}\n  }\n  \n  setHoverClass = (hoverClass) => {\n    this.ListeningStateChangedEvent({hoverClass})\n  }\n\n  render() {\n    if (this.props.char === ' ') {\n      return <span> </span>\n    } else {\n      return (\n        <span\n          className={this.state.hoverClass}\n          onMouseOver={() => this.setHoverClass('single-letter hovered')}\n          onMouseLeave={() => this.setHoverClass('single-letter unhovered')}\n        >\n          { this.props.char }\n        </span>\n      )\n    }\n  }\n}\n","import React from 'react';\nimport IntroLetter from './IntroLetter'\n\nexport default function IntroWord({ word }) {\n    return (\n      <span style={{ display: 'inline-block' }}>\n        {word.split('').map((letter, letterIndex) => (\n          <IntroLetter index={letterIndex} char={letter} />\n        ))}\n      </span>\n    );\n}","import React, { Fragment } from 'react'\nimport IntroWord from './IntroWord'\n\nexport default function IntroText({ children }) {\n    return (\n      <div>\n        <p className=\"intro-text\">\n            {children.split(' ').map((word, wordIndex) => (\n                <Fragment>\n                    <IntroWord key={wordIndex} word={word} />\n                    <span> </span>\n                </Fragment>\n            ))}\n        </p>\n      </div>\n    );\n  }","import React from \"react\"\n\nimport '../styles/index.scss'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport '../styles/global-styles.scss'\nimport IntroText from '../components/IntroText'\n\nconst IndexPage = ({location}) => (\n  <Layout fontColor='white' location={location.pathname}>\n    <SEO title=\"Portfolio\" keywords={[`karolina włoszek`, `product design`, `design`, `portfolio`]} />\n      <div className='center'>\n        <div className='introduction-wrapper'>\n          <IntroText>Hi, I'm Karolina, a freelance designer based in Wrocław. Ice cream gummies carrot cake chocolate bar tootsie roll. Liquorice macaroon soufflé powder gingerbread.</IntroText>\n        </div>\n      </div>\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from 'gatsby'\nimport '../styles/header.scss'\n\nconst Header = ({fontColor, location}) => {\n  return (\n    <header id='header' style={{color: fontColor}}>\n      <div className='center'>\n        <p><Link to='/'>Karolina Włoszek</Link></p>\n        <ul>\n          <li>\n            <Link to={location !== '/projects/' ? '/projects/' : '/'} className={location !== '/projects/' ? 'hoverable' : null}>\n              {location !== '/projects/' ? 'PROJEKTY' : 'X'}\n            </Link>\n          </li>\n          <li>\n            <Link to={location !== '/about-me/' ? '/about-me/' : '/'} className={location !== '/about-me/' ? 'hoverable' : null}>\n              {location !== '/about-me/' ? 'O MNIE' : 'X'}\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </header>\n\n  )\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children, fontColor, renderFooter, location }) => {\n  \n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <div>\n            <Header fontColor={fontColor} location={location} />\n            <main>{children}</main>\n          </div>\n        </>\n      )}\n    />\n  )\n\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  fontColor: PropTypes.string,\n  renderFooter: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  fontColor: 'black',\n  renderFooter: false,\n}\n\nexport default Layout\n"],"sourceRoot":""}