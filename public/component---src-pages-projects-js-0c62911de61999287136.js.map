{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Projects","_ref","location","a","createElement","fontColor","pathname","className","id","title","keywords","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","Header","style","color","gatsby_link_default","to","Layout","renderFooter","gatsby_browser_entry_StaticQuery","Fragment","components_header","_2994927498","node","bool"],"mappings":"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","file":"component---src-pages-projects-js-0c62911de61999287136.js","sourcesContent":["import React from \"react\"\n\nimport '../styles/projects.scss'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport '../styles/global-styles.scss'\n\nconst Projects = ({location}) => (\n  \n    <Layout fontColor='black' location={location.pathname}>\n    <div className='background' id='projects-page'>\n      <SEO title=\"Projekty\" keywords={[`karolina wÅ‚oszek`, `product design`, `design`, `portfolio`]} />\n        asdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasdasd\n        </div>\n    </Layout>\n  \n)\n\nexport default Projects\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from 'gatsby'\nimport '../styles/header.scss'\n\nconst Header = ({fontColor, location}) => {\n  return (\n    <header id='header' style={{color: fontColor}}>\n      <div className='center'>\n        <p><Link to='/'>Karolina WÅ‚oszek</Link></p>\n        <ul>\n          <li>\n            <Link to={location !== '/projects/' ? '/projects/' : '/'} className={location !== '/projects/' ? 'hoverable' : null}>\n              {location !== '/projects/' ? 'PROJEKTY' : 'X'}\n            </Link>\n          </li>\n          <li>\n            <Link to={location !== '/about-me/' ? '/about-me/' : '/'} className={location !== '/about-me/' ? 'hoverable' : null}>\n              {location !== '/about-me/' ? 'O MNIE' : 'X'}\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </header>\n\n  )\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children, fontColor, renderFooter, location }) => {\n  \n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <div>\n            <Header fontColor={fontColor} location={location} />\n            <main>{children}</main>\n          </div>\n        </>\n      )}\n    />\n  )\n\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  fontColor: PropTypes.string,\n  renderFooter: PropTypes.bool,\n}\n\nLayout.defaultProps = {\n  fontColor: 'black',\n  renderFooter: false,\n}\n\nexport default Layout\n"],"sourceRoot":""}