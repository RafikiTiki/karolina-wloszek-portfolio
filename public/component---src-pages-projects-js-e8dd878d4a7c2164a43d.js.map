{"version":3,"sources":["webpack:///./src/components/ProjectCaption.js","webpack:///./src/pages/projects.js","webpack:///./src/components/useCursorScreenHalf.js"],"names":["ProjectCaption","_ref","title","description","cursorScreenHalf","react_default","a","createElement","className","style","right","textAlign","left","Projects","location","_useState","useState","isAnyHovered","setIsAnyHovered","_useState2","hoveredIndex","setHoveredIndex","setCursorScreenHalf","useEffect","checkScreenHalf","event","mousePosition","clientX","width","window","innerWidth","document","addEventListener","removeEventListener","useCursorScreenHalf","handleMouseLeave","projects","projectsData","map","project","i","key","onMouseEnter","handleMouseEnter","onMouseLeave","PageLink","to","route","alt","src","previewData","img","caption","dots","e","layout","fontColor","pathname","seo","keywords","id","lib_default","slidesToShow","infinite","arrows","slidesToScroll","lazyLoad","speed"],"mappings":"6LAEe,SAASA,EAATC,GAAgE,IAAvCC,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,YAAaC,EAAmBH,EAAnBG,iBAGxD,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,MAA6B,UAArBL,EAA+B,CAACM,MAAO,MAAOC,UAAW,SAAW,CAACC,KAAM,QAChHP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBN,GAC9BG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,KAAyCL,iBCwEtCU,UApEE,SAAAZ,GAAgB,IAAda,EAAcb,EAAda,SAAcC,EACWC,oBAAS,GAA3CC,EADuBF,EAAA,GACTG,EADSH,EAAA,GAAAI,EAEWH,mBAAS,MAA3CI,EAFuBD,EAAA,GAETE,EAFSF,EAAA,GAGzBf,ECZO,WAA+B,IAAAW,EACQC,mBAAS,SAAnDZ,EADkCW,EAAA,GAChBO,EADgBP,EAAA,GAmB1C,OAhBAQ,oBAAU,WAEN,SAASC,EAAgBC,GACrB,IAAMC,EAAgBD,EAAME,QACtBC,EAAQC,SAAOC,WACrBR,EAAoBI,EAAgBE,EAAM,EAAI,QAAU,QAK5D,OAFAG,WAASC,iBAAiB,YAAaR,GAEhC,WACHO,WAASE,oBAAoB,YAAaT,KAG/C,IAEIpB,EDPgB8B,GAOnBC,EAAmB,WACvBjB,GAAgB,GAChBG,EAAgB,OAGZe,EAAWC,IAAaC,IAAI,SAACC,EAASC,GAC1C,OACEnC,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACViC,IAAKF,EAAQrC,MACbwC,aAAc,kBAfK,SAACF,GACxBtB,GAAgB,GAChBG,EAAgBmB,GAaQG,CAAiBH,IACrCI,aAAcT,GAEd9B,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAUC,GAAI,aAAeP,EAAQQ,MAAON,IAAK,OAASF,EAAQrC,OAChEG,EAAAC,EAAAC,cAAA,OACEyC,IAAK,MAAQT,EAAQrC,MACrB+C,IAAKV,EAAQW,YAAYC,IACzB3C,UAAWS,GAAgBG,IAAiBoB,EAAI,eAAiB,QAGpEvB,GAAgBG,IAAiBoB,EAAInC,EAAAC,EAAAC,cAACP,EAAD,CAAgBE,MAAOqC,EAAQrC,MAAOC,YAAaoC,EAAQW,YAAYE,QAAShD,iBAAkBA,IAAuB,QAK/JiD,EAAOhB,IAAaC,IAAI,SAACgB,EAAEd,GAC/B,OAAOnC,EAAAC,EAAAC,cAAA,OAAKkC,IAAKa,EAAEpD,MAAQsC,EAAGhC,UAAWY,IAAiBoB,EAAI,aAAe,UAe/E,OACEnC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQC,UAAU,UAAU1C,SAAUA,EAAS2C,UAC/CpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAKxD,MAAM,WAAWyD,SAAU,6DAC9BtD,EAAAC,EAAAC,cAAA,OAAKqD,GAAG,gBAAgBpD,UAAU,cAC9BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACsD,EAAAvD,EAfW,CACpB+C,MAAM,EACNS,aAAc,EACdC,UAAU,EACVC,QAAQ,EACRC,eAAgB,EAChBC,SAAU,cACVC,MAAO,KASI/B,IAGL/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZ6C","file":"component---src-pages-projects-js-e8dd878d4a7c2164a43d.js","sourcesContent":["import React from 'react'\n\nexport default function ProjectCaption({title, description, cursorScreenHalf}) {\n\n\n    return (\n        <div className='project-caption' style={ cursorScreenHalf === 'right' ? {right: '50%', textAlign: 'right'} : {left: '50%'} }>\n            <p className='project-title'>{title}</p>\n            <span className='project-description'>– {description}</span>\n        </div>\n    )\n}\n","import React, { useState } from \"react\"\nimport '../styles/projects.scss'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport '../styles/global-styles.scss'\nimport projectsData from '../project-data/projectsData'\nimport Slider from \"react-slick\";\nimport PageLink from '../components/PageLink'\nimport ProjectCaption from '../components/ProjectCaption'\nimport useCursorScreenHalf from '../components/useCursorScreenHalf'\n\n\nconst Projects = ({location}) => {\n  const [ isAnyHovered, setIsAnyHovered ] = useState(false)\n  const [ hoveredIndex, setHoveredIndex ] = useState(null)\n  const cursorScreenHalf = useCursorScreenHalf();\n\n  const handleMouseEnter = (i) => {\n    setIsAnyHovered(true)\n    setHoveredIndex(i)\n  }\n\n  const handleMouseLeave = () => {\n    setIsAnyHovered(false)\n    setHoveredIndex(null)\n  }\n\n  const projects = projectsData.map((project, i) => {\n    return (\n      <div\n        className='slide-container'\n        key={project.title}\n        onMouseEnter={() => handleMouseEnter(i)}\n        onMouseLeave={handleMouseLeave}\n      >\n        <PageLink to={'/projects/' + project.route} key={'link' + project.title}>\n          <img\n            alt={'img' + project.title}\n            src={project.previewData.img}\n            className={isAnyHovered && hoveredIndex !== i ? 'out-of-focus' : null}\n          />\n        </PageLink>\n        {isAnyHovered && hoveredIndex === i ? <ProjectCaption title={project.title} description={project.previewData.caption} cursorScreenHalf={cursorScreenHalf} /> : null}\n      </div>\n    )\n  })\n\n  const dots = projectsData.map((e,i) => {\n    return <div key={e.title + i} className={hoveredIndex === i ? 'dot active' : 'dot'} />\n  })\n\n\n\n  const slickSettings = {\n    dots: false,\n    slidesToShow: 4,\n    infinite: true,\n    arrows: true,\n    slidesToScroll: 2,\n    lazyLoad: 'progressive',\n    speed: 400,\n  }\n  \n  return (\n    <Layout fontColor='inherit' location={location.pathname}>\n    <SEO title=\"Projekty\" keywords={[`karolina włoszek`, `product design`, `design`, `portfolio`]}/>\n      <div id='projects-page' className='background'>\n          <div className='slider-wrapper'>\n            <Slider {...slickSettings}>\n              {projects}\n            </Slider>\n          </div>\n          <div className='dots'>\n            {dots}\n          </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Projects","import { useState, useEffect } from 'react'\nimport { document, window } from 'browser-monads'\n\nexport default function useCursorScreenHalf() {\n    const [ cursorScreenHalf, setCursorScreenHalf ] = useState('right')\n    \n    useEffect(() => {\n\n        function checkScreenHalf(event) {\n            const mousePosition = event.clientX;\n            const width = window.innerWidth;\n            setCursorScreenHalf(mousePosition > width/2 ? 'right' : 'left')\n        }\n\n        document.addEventListener('mousemove', checkScreenHalf)\n\n        return () => {\n            document.removeEventListener('mousemove', checkScreenHalf)\n        }\n\n    }, [])\n\n    return cursorScreenHalf;\n}\n"],"sourceRoot":""}